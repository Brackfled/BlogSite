using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Persistance.Migrations
{
    /// <inheritdoc />
    public partial class init2 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 111, 133, 114, 12, 110, 194, 206, 213, 233, 240, 152, 119, 89, 176, 129, 131, 195, 255, 170, 79, 135, 224, 72, 45, 36, 150, 127, 78, 241, 197, 193, 191, 28, 89, 161, 210, 175, 82, 254, 151, 178, 9, 71, 233, 160, 86, 244, 151, 78, 152, 85, 209, 108, 85, 178, 140, 115, 157, 78, 45, 66, 135, 146, 69 }, new byte[] { 55, 59, 108, 94, 182, 0, 143, 84, 234, 223, 232, 176, 91, 75, 137, 158, 86, 156, 65, 191, 248, 106, 47, 10, 41, 1, 17, 108, 183, 101, 210, 32, 71, 165, 47, 135, 55, 120, 59, 119, 39, 229, 209, 23, 85, 127, 57, 8, 68, 162, 25, 222, 17, 16, 239, 249, 135, 237, 85, 112, 52, 89, 82, 83, 112, 24, 227, 6, 202, 2, 9, 190, 195, 208, 233, 69, 95, 57, 47, 36, 89, 136, 9, 110, 183, 30, 61, 204, 66, 42, 48, 78, 187, 221, 212, 74, 210, 137, 190, 20, 218, 151, 71, 222, 130, 140, 87, 133, 19, 192, 193, 49, 169, 209, 228, 159, 239, 186, 182, 27, 58, 192, 132, 18, 248, 193, 201, 31 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 126, 94, 26, 181, 12, 144, 131, 251, 63, 240, 224, 235, 147, 204, 136, 128, 161, 24, 115, 159, 219, 76, 122, 46, 2, 91, 199, 55, 13, 218, 37, 184, 125, 100, 243, 38, 124, 85, 187, 13, 51, 70, 171, 55, 66, 157, 144, 70, 59, 163, 82, 31, 155, 169, 250, 189, 230, 14, 172, 125, 212, 218, 97, 169 }, new byte[] { 212, 110, 195, 86, 110, 140, 110, 207, 143, 105, 81, 5, 187, 172, 101, 101, 101, 232, 123, 244, 65, 108, 218, 34, 244, 180, 144, 2, 246, 145, 110, 6, 90, 212, 131, 159, 35, 235, 22, 128, 14, 117, 43, 67, 243, 165, 222, 49, 120, 67, 149, 226, 209, 186, 18, 131, 223, 202, 189, 4, 216, 8, 43, 60, 184, 44, 35, 183, 228, 162, 98, 42, 101, 17, 255, 120, 203, 200, 134, 206, 77, 14, 5, 88, 74, 209, 146, 224, 52, 104, 37, 9, 101, 27, 66, 158, 58, 230, 78, 136, 60, 234, 237, 63, 27, 222, 120, 89, 95, 163, 176, 51, 15, 84, 209, 207, 201, 58, 123, 54, 60, 192, 209, 44, 114, 48, 48, 7 } });
        }
    }
}
