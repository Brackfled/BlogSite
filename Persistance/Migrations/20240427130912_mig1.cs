using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Persistance.Migrations
{
    /// <inheritdoc />
    public partial class mig1 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 223, 47, 32, 94, 191, 245, 17, 37, 82, 168, 110, 126, 135, 245, 212, 40, 121, 145, 132, 103, 229, 57, 78, 111, 147, 125, 143, 60, 125, 39, 85, 150, 35, 21, 136, 86, 204, 227, 92, 207, 71, 164, 104, 233, 73, 67, 78, 10, 5, 193, 246, 249, 107, 198, 237, 249, 238, 9, 189, 120, 215, 5, 178, 136 }, new byte[] { 23, 235, 92, 12, 210, 70, 82, 136, 93, 113, 83, 208, 194, 42, 155, 207, 253, 61, 120, 145, 176, 218, 239, 187, 173, 100, 86, 74, 222, 21, 184, 144, 62, 149, 93, 221, 197, 192, 46, 143, 147, 116, 133, 10, 115, 215, 192, 100, 79, 224, 164, 63, 185, 84, 190, 175, 152, 193, 32, 98, 47, 28, 163, 104, 35, 104, 99, 57, 114, 194, 189, 166, 209, 86, 154, 153, 244, 131, 35, 80, 206, 117, 141, 82, 126, 223, 222, 129, 54, 255, 229, 13, 156, 241, 29, 254, 206, 242, 218, 222, 14, 100, 33, 167, 140, 26, 82, 32, 161, 35, 34, 195, 7, 197, 225, 216, 58, 103, 65, 219, 250, 76, 226, 190, 105, 231, 243, 20 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 202, 9, 34, 231, 110, 17, 75, 216, 118, 164, 191, 78, 12, 11, 163, 232, 162, 247, 158, 153, 214, 170, 9, 139, 223, 174, 55, 74, 98, 199, 62, 124, 53, 195, 205, 231, 95, 4, 194, 180, 46, 126, 209, 143, 86, 107, 150, 156, 153, 40, 199, 118, 11, 223, 237, 105, 17, 129, 8, 28, 189, 14, 88, 81 }, new byte[] { 24, 65, 242, 167, 97, 125, 14, 154, 183, 12, 177, 25, 20, 252, 242, 251, 159, 162, 174, 18, 172, 1, 79, 203, 85, 47, 197, 63, 83, 136, 169, 56, 39, 210, 142, 180, 174, 181, 14, 34, 10, 5, 151, 126, 202, 65, 66, 133, 207, 195, 190, 128, 246, 146, 208, 93, 7, 171, 35, 95, 225, 156, 189, 116, 66, 111, 198, 247, 160, 39, 133, 97, 45, 97, 131, 35, 180, 11, 217, 75, 92, 55, 122, 44, 41, 70, 233, 190, 255, 34, 99, 104, 86, 53, 35, 218, 9, 245, 154, 39, 242, 185, 207, 139, 89, 77, 79, 210, 131, 215, 56, 159, 85, 50, 135, 67, 44, 190, 187, 193, 5, 196, 50, 27, 58, 87, 152, 213 } });
        }
    }
}
